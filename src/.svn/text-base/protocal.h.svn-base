#ifndef PROTOCAL_H
#define PROTOCAL_H


struct vec_str_t {
	const char	*ptr;
	int		len;
};


namespace http
{

        extern const struct vec_str_t known_http_methods[];

        //header
        extern const char * HEADER_RANGE;
        
        enum
        {
                HTTP_GET,
                HTTP_POST,
                HTTP_PUT,
                HTTP_DELETE,
                HTTP_HEAD,
                HTTP_UNKNOWN
        };

}


namespace vs_protocal
{
	extern  const char * URI_M3U8;
	extern const char * URI_SWITCH;
	extern const char * URI_SEEK;
	extern const char * URI_GETTS;
	
	extern const char * URI_TEST_VIDEO;
        
	extern const char * ST_VOD;
	extern const char * ST_TSTV;
	extern const char * ST_LIVE;
	
	//for play
	extern const char * PARAM_SESSIONID;
        extern const char * PARAM_AID;
        extern const char * PARAM_PID;
        extern const char * PARAM_RATE;
        extern const char * PARAM_SP;
        extern const char * PARAM_ST;
        extern const char * PARAM_SEED;
        extern const char * PARAM_ST_VOD;
        extern const char * PARAM_ST_TSTV;
        extern const char * PARAM_ST_LIVE;
        extern const char * PARAM_ST_VFS;
	
	//for switch
        extern const char * PARAM_SCALE;
        extern const char * PARAM_LOCALTC;

	//for seek
        extern const char * PARAM_TIMECODE;

	//for getts
        extern const char * PARAM_TS_AID;
        extern const char * PARAM_TS_PID;
        extern const char * PARAM_FILENAME;
	
        

}


namespace m3u8
{
        extern const char * EXT_X_ENDLIST;
        extern const char * EXT_X_DISCONTINUITY;
        extern const char * EXT_X_ALLOW_CACHE_NO;
        extern const char * EXT_X_ALLOW_CACHE_YES;
}


#endif

