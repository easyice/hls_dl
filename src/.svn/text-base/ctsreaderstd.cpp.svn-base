/*
    <one line to give the program's name and a brief idea of what it does.>
    Copyright (C) 2012  elva <email>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/


#include "ctsreaderstd.h"
#include <stdio.h>


CTsReaderStd::CTsReaderStd()
{
	m_fp = NULL;
}

CTsReaderStd::~CTsReaderStd()
{

}


bool CTsReaderStd::Switch(float fScale)
{
	return true;
}

bool CTsReaderStd::Seek(long long llTimeCode)
{
	return true;
}

bool CTsReaderStd::Close()
{
	if (m_fp != NULL)
	{
		fclose(m_fp);
		m_fp = NULL;
	}
	return true;
}

int CTsReaderStd::Read(BYTE* pBuf, int nBufSize)
{
	if (m_fp == NULL)
	{
		return -1;
	}
	return fread(pBuf,1,nBufSize,m_fp);
}

int CTsReaderStd::ReadGop(BYTE* pBuf, int nBufSize,long long &beginpcrvalue,
			    long long &endpcrvalue, long long& llTimeCodePcr)
{
	//do not use
	return 0;
}

bool CTsReaderStd::Open(const std::string& filename,const char* mode)
{
	m_fp = fopen(filename.c_str(),mode);
	
	if (m_fp == NULL)
	{
		return false;
	}
	
	return true;
}

bool CTsReaderStd::Open(OVT_STRU_CREATE_USER_OBJ_INFO stInfo)
{
	//do not use
	return true;
}

