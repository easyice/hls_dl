#include "global.h"
#include <fcntl.h>

/*
 * Check whether full request is buffered Return headers length, or 0
 */
int get_headers_len(const char *buf, size_t buflen)
{
	const char	*s, *e;
	int		len = 0;

	for (s = buf, e = s + buflen - 1; len == 0 && s < e; s++)
		/* Control characters are not allowed but >=128 is. */
		if (!isprint(*(unsigned char *)s) && *s != '\r' && *s != '\n' && *(unsigned char *)s < 128)
			len = -1;
		else if (s[0] == '\n' && s[1] == '\n')
			len = s - buf + 2;
		else if (s[0] == '\n' && &s[1] < e &&
		    s[1] == '\r' && s[2] == '\n')
			len = s - buf + 3;

	return (len);
}


int set_non_blocking_mode(int fd)
{
        int     ret = -1;
        int     flags;

        if ((flags = fcntl(fd, F_GETFL, 0)) == -1) 
        {
                return -1;
        } 
        else if (fcntl(fd, F_SETFL, flags | O_NONBLOCK) != 0) 
        {
                return -1;
        } 
        else 
        {
                ret = 0;        /* Success */
        }

        return (ret);
}

const  char* SERVER_LOGO = "OOVS";



